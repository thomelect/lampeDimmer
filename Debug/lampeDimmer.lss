
lampeDimmer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00000c7c  00000d10  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c7c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000008f  00800106  00800106  00000d16  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d16  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d74  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  00000db4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000fae  00000000  00000000  00000e74  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c7e  00000000  00000000  00001e22  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004dd  00000000  00000000  00002aa0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001d4  00000000  00000000  00002f80  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000614  00000000  00000000  00003154  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000004c6  00000000  00000000  00003768  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  00003c2e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 56 00 	jmp	0xac	; 0xac <__ctors_end>
   4:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
   8:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
   c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  10:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  14:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  18:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  1c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  20:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  24:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  28:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  2c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  30:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  34:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  38:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  3c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  40:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  44:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  48:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  4c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  50:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  54:	0c 94 92 00 	jmp	0x124	; 0x124 <__vector_21>
  58:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  5c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  60:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  64:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__vector_25>
  68:	0c 94 2b 01 	jmp	0x256	; 0x256 <__vector_26>
  6c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  70:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  74:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  78:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  7c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  80:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  84:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  88:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  8c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  90:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  94:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  98:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  9c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  a0:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  a4:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  a8:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>

000000ac <__ctors_end>:
  ac:	11 24       	eor	r1, r1
  ae:	1f be       	out	0x3f, r1	; 63
  b0:	cf ef       	ldi	r28, 0xFF	; 255
  b2:	da e0       	ldi	r29, 0x0A	; 10
  b4:	de bf       	out	0x3e, r29	; 62
  b6:	cd bf       	out	0x3d, r28	; 61

000000b8 <__do_copy_data>:
  b8:	11 e0       	ldi	r17, 0x01	; 1
  ba:	a0 e0       	ldi	r26, 0x00	; 0
  bc:	b1 e0       	ldi	r27, 0x01	; 1
  be:	ec e7       	ldi	r30, 0x7C	; 124
  c0:	fc e0       	ldi	r31, 0x0C	; 12
  c2:	02 c0       	rjmp	.+4      	; 0xc8 <__do_copy_data+0x10>
  c4:	05 90       	lpm	r0, Z+
  c6:	0d 92       	st	X+, r0
  c8:	a6 30       	cpi	r26, 0x06	; 6
  ca:	b1 07       	cpc	r27, r17
  cc:	d9 f7       	brne	.-10     	; 0xc4 <__do_copy_data+0xc>

000000ce <__do_clear_bss>:
  ce:	21 e0       	ldi	r18, 0x01	; 1
  d0:	a6 e0       	ldi	r26, 0x06	; 6
  d2:	b1 e0       	ldi	r27, 0x01	; 1
  d4:	01 c0       	rjmp	.+2      	; 0xd8 <.do_clear_bss_start>

000000d6 <.do_clear_bss_loop>:
  d6:	1d 92       	st	X+, r1

000000d8 <.do_clear_bss_start>:
  d8:	a5 39       	cpi	r26, 0x95	; 149
  da:	b2 07       	cpc	r27, r18
  dc:	e1 f7       	brne	.-8      	; 0xd6 <.do_clear_bss_loop>
  de:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <main>
  e2:	0c 94 3c 06 	jmp	0xc78	; 0xc78 <_exit>

000000e6 <__bad_interrupt>:
  e6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ea <adcInit>:
	//ADCSRA = ADEN ADSC ADATE ADIF ADIE ADPS2 ADPS1 ADPS0
	//ADCSRB = ADHSM ACME MUX5 – ADTS3 ADTS2 ADTS1 ADTS0
	//DIDR0 = ADC7D ADC6D ADC5D ADC4D - - ADC1D ADC0D
	//DIDR2 = - - ADC13D ADC12D ADC11D ADC10D ADC9D ADC8D
	
	ADMUX = (1<<REFS0); //Référence sur AVcc avec un condensateur sur la broche AREF.
  ea:	80 e4       	ldi	r24, 0x40	; 64
  ec:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
	ADCSRA = (1<<ADEN) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0); //ADC enable / ADC diviseur = 128 (le plus lent possible).
  f0:	87 e8       	ldi	r24, 0x87	; 135
  f2:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
	ADCSRB = (1<<ADHSM);
  f6:	80 e8       	ldi	r24, 0x80	; 128
  f8:	80 93 7b 00 	sts	0x007B, r24	; 0x80007b <__TEXT_REGION_LENGTH__+0x7f807b>
	DIDR0 = (1<<ADC0D); //entrée numérique désactivée pour le ADC0.
  fc:	81 e0       	ldi	r24, 0x01	; 1
  fe:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7f807e>
 102:	08 95       	ret

00000104 <adcRead>:
}

uint16_t adcRead(void)
{
	ADCSRA |= (1<<ADSC);
 104:	ea e7       	ldi	r30, 0x7A	; 122
 106:	f0 e0       	ldi	r31, 0x00	; 0
 108:	80 81       	ld	r24, Z
 10a:	80 64       	ori	r24, 0x40	; 64
 10c:	80 83       	st	Z, r24
	while(ADCSRA & (1<<ADSC)); //On attend que la lecture du ADC soir terminée.
 10e:	80 81       	ld	r24, Z
 110:	86 fd       	sbrc	r24, 6
 112:	fd cf       	rjmp	.-6      	; 0x10e <adcRead+0xa>
	return ADC;
 114:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 118:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
}
 11c:	08 95       	ret

0000011e <adcRead8>:

uint8_t adcRead8(void)
{
	return (adcRead() & 0b11111111);
 11e:	0e 94 82 00 	call	0x104	; 0x104 <adcRead>
 122:	08 95       	ret

00000124 <__vector_21>:

/**
*@brief Interruption de la comparaison sur OCR0A (timer0) qui met msFlag à 1 lorsque msCnt atteint TIMER_CNT_CYCLE qui est définie dans le define. msCnt est incrémenté à chaques 1ms.
*/
ISR(TIMER0_COMPA_vect)
{
 124:	1f 92       	push	r1
 126:	0f 92       	push	r0
 128:	0f b6       	in	r0, 0x3f	; 63
 12a:	0f 92       	push	r0
 12c:	11 24       	eor	r1, r1
 12e:	8f 93       	push	r24
 130:	9f 93       	push	r25
	msCnt++;
 132:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <msCnt>
 136:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <msCnt+0x1>
 13a:	01 96       	adiw	r24, 0x01	; 1
 13c:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <msCnt+0x1>
 140:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <msCnt>
	if (msCnt >= TIMER_CNT_CYCLE)
 144:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <msCnt>
 148:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <msCnt+0x1>
 14c:	49 97       	sbiw	r24, 0x19	; 25
 14e:	60 f0       	brcs	.+24     	; 0x168 <__vector_21+0x44>
	{
		msCnt -= TIMER_CNT_CYCLE;
 150:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <msCnt>
 154:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <msCnt+0x1>
 158:	49 97       	sbiw	r24, 0x19	; 25
 15a:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <msCnt+0x1>
 15e:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <msCnt>
		msFlag = 1;
 162:	81 e0       	ldi	r24, 0x01	; 1
 164:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <__data_end>
	}
}
 168:	9f 91       	pop	r25
 16a:	8f 91       	pop	r24
 16c:	0f 90       	pop	r0
 16e:	0f be       	out	0x3f, r0	; 63
 170:	0f 90       	pop	r0
 172:	1f 90       	pop	r1
 174:	18 95       	reti

00000176 <timer0Init>:
{
	//TCCR0A : COM0A1 COM0A0 COM0B1 COM0B0 – – WGM01 WGM00
	//TCCR0B : FOC0A FOC0B – – WGM02 CS02 CS01 CS00
	//TIMSK0 : – – – – – OCIE0B OCIE0A TOIE0
	uint8_t top = 250; //Valeur de OCR0A.
	TCCR0A = 0b00000010; //Mode CTC.
 176:	82 e0       	ldi	r24, 0x02	; 2
 178:	84 bd       	out	0x24, r24	; 36
	TCCR0B = 0b00000011; //Prescaler de 64.
 17a:	93 e0       	ldi	r25, 0x03	; 3
 17c:	95 bd       	out	0x25, r25	; 37
	TIMSK0 = 0b00000010; //Output compare match A interrupt enable.
 17e:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>
	OCR0A = top-1; //62.5ns * 64 * 250 = 1ms.
 182:	89 ef       	ldi	r24, 0xF9	; 249
 184:	87 bd       	out	0x27, r24	; 39
	sei();
 186:	78 94       	sei
 188:	08 95       	ret

0000018a <miscInit>:
	}
}

void miscInit(void)
{
	usartInit(1000000, F_CPU); //Initialisation du USART à 1Mbps.
 18a:	20 e0       	ldi	r18, 0x00	; 0
 18c:	34 e2       	ldi	r19, 0x24	; 36
 18e:	44 ef       	ldi	r20, 0xF4	; 244
 190:	50 e0       	ldi	r21, 0x00	; 0
 192:	60 e4       	ldi	r22, 0x40	; 64
 194:	72 e4       	ldi	r23, 0x42	; 66
 196:	8f e0       	ldi	r24, 0x0F	; 15
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <usartInit>
	timer0Init(); //Initialisation de timer 0.
 19e:	0e 94 bb 00 	call	0x176	; 0x176 <timer0Init>
	adcInit(); //Appel de la fonction d'initialisation du ADC.
 1a2:	0e 94 75 00 	call	0xea	; 0xea <adcInit>
 1a6:	08 95       	ret

000001a8 <main>:
*/
void timer0Init(void);

int main(void)
{
	miscInit();
 1a8:	0e 94 c5 00 	call	0x18a	; 0x18a <miscInit>
	while (1)
	{
		if (msFlag)
		{
			msFlag = 0;
			sprintf(msg, "%d\n\r", adcRead8());
 1ac:	00 e0       	ldi	r16, 0x00	; 0
 1ae:	11 e0       	ldi	r17, 0x01	; 1
 1b0:	c0 e1       	ldi	r28, 0x10	; 16
 1b2:	d1 e0       	ldi	r29, 0x01	; 1
{
	miscInit();
	
	while (1)
	{
		if (msFlag)
 1b4:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__data_end>
 1b8:	88 23       	and	r24, r24
 1ba:	e1 f3       	breq	.-8      	; 0x1b4 <main+0xc>
		{
			msFlag = 0;
 1bc:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <__data_end>
			sprintf(msg, "%d\n\r", adcRead8());
 1c0:	0e 94 8f 00 	call	0x11e	; 0x11e <adcRead8>
 1c4:	1f 92       	push	r1
 1c6:	8f 93       	push	r24
 1c8:	1f 93       	push	r17
 1ca:	0f 93       	push	r16
 1cc:	df 93       	push	r29
 1ce:	cf 93       	push	r28
 1d0:	0e 94 52 03 	call	0x6a4	; 0x6a4 <sprintf>
			usartSendString(msg);
 1d4:	ce 01       	movw	r24, r28
 1d6:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <usartSendString>
 1da:	0f 90       	pop	r0
 1dc:	0f 90       	pop	r0
 1de:	0f 90       	pop	r0
 1e0:	0f 90       	pop	r0
 1e2:	0f 90       	pop	r0
 1e4:	0f 90       	pop	r0
 1e6:	e6 cf       	rjmp	.-52     	; 0x1b4 <main+0xc>

000001e8 <__vector_25>:
	{
		if(usartSendByte(source[i]))
			return i;
	}
	return size;
}
 1e8:	1f 92       	push	r1
 1ea:	0f 92       	push	r0
 1ec:	0f b6       	in	r0, 0x3f	; 63
 1ee:	0f 92       	push	r0
 1f0:	11 24       	eor	r1, r1
 1f2:	2f 93       	push	r18
 1f4:	3f 93       	push	r19
 1f6:	8f 93       	push	r24
 1f8:	9f 93       	push	r25
 1fa:	ef 93       	push	r30
 1fc:	ff 93       	push	r31
 1fe:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <_rxCnt>
 202:	8f 5f       	subi	r24, 0xFF	; 255
 204:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <_rxCnt>
 208:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <_rxBufferIn>
 20c:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <_rxBufferIn+0x1>
 210:	9c 01       	movw	r18, r24
 212:	2f 5f       	subi	r18, 0xFF	; 255
 214:	3f 4f       	sbci	r19, 0xFF	; 255
 216:	30 93 0f 01 	sts	0x010F, r19	; 0x80010f <_rxBufferIn+0x1>
 21a:	20 93 0e 01 	sts	0x010E, r18	; 0x80010e <_rxBufferIn>
 21e:	20 91 ce 00 	lds	r18, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7f80ce>
 222:	fc 01       	movw	r30, r24
 224:	eb 5e       	subi	r30, 0xEB	; 235
 226:	fe 4f       	sbci	r31, 0xFE	; 254
 228:	20 83       	st	Z, r18
 22a:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <_rxBufferIn>
 22e:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <_rxBufferIn+0x1>
 232:	80 34       	cpi	r24, 0x40	; 64
 234:	91 05       	cpc	r25, r1
 236:	20 f0       	brcs	.+8      	; 0x240 <__vector_25+0x58>
 238:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <_rxBufferIn+0x1>
 23c:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <_rxBufferIn>
 240:	ff 91       	pop	r31
 242:	ef 91       	pop	r30
 244:	9f 91       	pop	r25
 246:	8f 91       	pop	r24
 248:	3f 91       	pop	r19
 24a:	2f 91       	pop	r18
 24c:	0f 90       	pop	r0
 24e:	0f be       	out	0x3f, r0	; 63
 250:	0f 90       	pop	r0
 252:	1f 90       	pop	r1
 254:	18 95       	reti

00000256 <__vector_26>:
 256:	1f 92       	push	r1
 258:	0f 92       	push	r0
 25a:	0f b6       	in	r0, 0x3f	; 63
 25c:	0f 92       	push	r0
 25e:	11 24       	eor	r1, r1
 260:	8f 93       	push	r24
 262:	ef 93       	push	r30
 264:	ff 93       	push	r31
 266:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <_txCnt>
 26a:	81 11       	cpse	r24, r1
 26c:	06 c0       	rjmp	.+12     	; 0x27a <__vector_26+0x24>
 26e:	e9 ec       	ldi	r30, 0xC9	; 201
 270:	f0 e0       	ldi	r31, 0x00	; 0
 272:	80 81       	ld	r24, Z
 274:	8f 7d       	andi	r24, 0xDF	; 223
 276:	80 83       	st	Z, r24
 278:	17 c0       	rjmp	.+46     	; 0x2a8 <__vector_26+0x52>
 27a:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <_txCnt>
 27e:	81 50       	subi	r24, 0x01	; 1
 280:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <_txCnt>
 284:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <_txBufferOut>
 288:	81 e0       	ldi	r24, 0x01	; 1
 28a:	8e 0f       	add	r24, r30
 28c:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <_txBufferOut>
 290:	f0 e0       	ldi	r31, 0x00	; 0
 292:	eb 5a       	subi	r30, 0xAB	; 171
 294:	fe 4f       	sbci	r31, 0xFE	; 254
 296:	80 81       	ld	r24, Z
 298:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7f80ce>
 29c:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <_txBufferOut>
 2a0:	80 34       	cpi	r24, 0x40	; 64
 2a2:	10 f0       	brcs	.+4      	; 0x2a8 <__vector_26+0x52>
 2a4:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <_txBufferOut>
 2a8:	ff 91       	pop	r31
 2aa:	ef 91       	pop	r30
 2ac:	8f 91       	pop	r24
 2ae:	0f 90       	pop	r0
 2b0:	0f be       	out	0x3f, r0	; 63
 2b2:	0f 90       	pop	r0
 2b4:	1f 90       	pop	r1
 2b6:	18 95       	reti

000002b8 <usartInit>:
 2b8:	cf 92       	push	r12
 2ba:	df 92       	push	r13
 2bc:	ef 92       	push	r14
 2be:	ff 92       	push	r15
 2c0:	6b 01       	movw	r12, r22
 2c2:	7c 01       	movw	r14, r24
 2c4:	c1 14       	cp	r12, r1
 2c6:	82 ec       	ldi	r24, 0xC2	; 194
 2c8:	d8 06       	cpc	r13, r24
 2ca:	81 e0       	ldi	r24, 0x01	; 1
 2cc:	e8 06       	cpc	r14, r24
 2ce:	f1 04       	cpc	r15, r1
 2d0:	20 f1       	brcs	.+72     	; 0x31a <usartInit+0x62>
 2d2:	e8 ec       	ldi	r30, 0xC8	; 200
 2d4:	f0 e0       	ldi	r31, 0x00	; 0
 2d6:	80 81       	ld	r24, Z
 2d8:	82 60       	ori	r24, 0x02	; 2
 2da:	80 83       	st	Z, r24
 2dc:	ca 01       	movw	r24, r20
 2de:	b9 01       	movw	r22, r18
 2e0:	68 94       	set
 2e2:	12 f8       	bld	r1, 2
 2e4:	96 95       	lsr	r25
 2e6:	87 95       	ror	r24
 2e8:	77 95       	ror	r23
 2ea:	67 95       	ror	r22
 2ec:	16 94       	lsr	r1
 2ee:	d1 f7       	brne	.-12     	; 0x2e4 <usartInit+0x2c>
 2f0:	a7 01       	movw	r20, r14
 2f2:	96 01       	movw	r18, r12
 2f4:	0e 94 30 03 	call	0x660	; 0x660 <__udivmodsi4>
 2f8:	ca 01       	movw	r24, r20
 2fa:	b9 01       	movw	r22, r18
 2fc:	0e 94 a2 02 	call	0x544	; 0x544 <__floatunsisf>
 300:	20 e0       	ldi	r18, 0x00	; 0
 302:	30 e0       	ldi	r19, 0x00	; 0
 304:	40 e0       	ldi	r20, 0x00	; 0
 306:	5f e3       	ldi	r21, 0x3F	; 63
 308:	0e 94 06 02 	call	0x40c	; 0x40c <__subsf3>
 30c:	0e 94 73 02 	call	0x4e6	; 0x4e6 <__fixunssfsi>
 310:	70 93 cd 00 	sts	0x00CD, r23	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7f80cd>
 314:	60 93 cc 00 	sts	0x00CC, r22	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7f80cc>
 318:	23 c0       	rjmp	.+70     	; 0x360 <usartInit+0xa8>
 31a:	e8 ec       	ldi	r30, 0xC8	; 200
 31c:	f0 e0       	ldi	r31, 0x00	; 0
 31e:	80 81       	ld	r24, Z
 320:	8d 7f       	andi	r24, 0xFD	; 253
 322:	80 83       	st	Z, r24
 324:	ca 01       	movw	r24, r20
 326:	b9 01       	movw	r22, r18
 328:	68 94       	set
 32a:	13 f8       	bld	r1, 3
 32c:	96 95       	lsr	r25
 32e:	87 95       	ror	r24
 330:	77 95       	ror	r23
 332:	67 95       	ror	r22
 334:	16 94       	lsr	r1
 336:	d1 f7       	brne	.-12     	; 0x32c <usartInit+0x74>
 338:	a7 01       	movw	r20, r14
 33a:	96 01       	movw	r18, r12
 33c:	0e 94 30 03 	call	0x660	; 0x660 <__udivmodsi4>
 340:	ca 01       	movw	r24, r20
 342:	b9 01       	movw	r22, r18
 344:	0e 94 a2 02 	call	0x544	; 0x544 <__floatunsisf>
 348:	20 e0       	ldi	r18, 0x00	; 0
 34a:	30 e0       	ldi	r19, 0x00	; 0
 34c:	40 e0       	ldi	r20, 0x00	; 0
 34e:	5f e3       	ldi	r21, 0x3F	; 63
 350:	0e 94 06 02 	call	0x40c	; 0x40c <__subsf3>
 354:	0e 94 73 02 	call	0x4e6	; 0x4e6 <__fixunssfsi>
 358:	70 93 cd 00 	sts	0x00CD, r23	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7f80cd>
 35c:	60 93 cc 00 	sts	0x00CC, r22	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7f80cc>
 360:	e9 ec       	ldi	r30, 0xC9	; 201
 362:	f0 e0       	ldi	r31, 0x00	; 0
 364:	80 81       	ld	r24, Z
 366:	88 61       	ori	r24, 0x18	; 24
 368:	80 83       	st	Z, r24
 36a:	78 94       	sei
 36c:	80 81       	ld	r24, Z
 36e:	80 68       	ori	r24, 0x80	; 128
 370:	80 83       	st	Z, r24
 372:	80 81       	ld	r24, Z
 374:	80 62       	ori	r24, 0x20	; 32
 376:	80 83       	st	Z, r24
 378:	ff 90       	pop	r15
 37a:	ef 90       	pop	r14
 37c:	df 90       	pop	r13
 37e:	cf 90       	pop	r12
 380:	08 95       	ret

00000382 <usartSendByte>:
 382:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <_txCnt>
 386:	90 34       	cpi	r25, 0x40	; 64
 388:	10 f5       	brcc	.+68     	; 0x3ce <usartSendByte+0x4c>
 38a:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <_txCnt>
 38e:	9f 5f       	subi	r25, 0xFF	; 255
 390:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <_txCnt>
 394:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <_txBufferIn>
 398:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <_txBufferIn+0x1>
 39c:	a9 01       	movw	r20, r18
 39e:	4f 5f       	subi	r20, 0xFF	; 255
 3a0:	5f 4f       	sbci	r21, 0xFF	; 255
 3a2:	50 93 0b 01 	sts	0x010B, r21	; 0x80010b <_txBufferIn+0x1>
 3a6:	40 93 0a 01 	sts	0x010A, r20	; 0x80010a <_txBufferIn>
 3aa:	f9 01       	movw	r30, r18
 3ac:	eb 5a       	subi	r30, 0xAB	; 171
 3ae:	fe 4f       	sbci	r31, 0xFE	; 254
 3b0:	80 83       	st	Z, r24
 3b2:	40 34       	cpi	r20, 0x40	; 64
 3b4:	51 05       	cpc	r21, r1
 3b6:	20 f0       	brcs	.+8      	; 0x3c0 <usartSendByte+0x3e>
 3b8:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <_txBufferIn+0x1>
 3bc:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <_txBufferIn>
 3c0:	e9 ec       	ldi	r30, 0xC9	; 201
 3c2:	f0 e0       	ldi	r31, 0x00	; 0
 3c4:	80 81       	ld	r24, Z
 3c6:	80 62       	ori	r24, 0x20	; 32
 3c8:	80 83       	st	Z, r24
 3ca:	80 e0       	ldi	r24, 0x00	; 0
 3cc:	08 95       	ret
 3ce:	81 e0       	ldi	r24, 0x01	; 1
 3d0:	08 95       	ret

000003d2 <usartSendString>:

uint8_t usartSendString(const char * str)
{
 3d2:	0f 93       	push	r16
 3d4:	1f 93       	push	r17
 3d6:	cf 93       	push	r28
 3d8:	fc 01       	movw	r30, r24
	uint8_t nbChar = 0;
	for (uint8_t i = 0; str[i]; i++)
 3da:	80 81       	ld	r24, Z
 3dc:	88 23       	and	r24, r24
 3de:	79 f0       	breq	.+30     	; 0x3fe <usartSendString+0x2c>
 3e0:	8f 01       	movw	r16, r30
 3e2:	c0 e0       	ldi	r28, 0x00	; 0
	{
		if(usartSendByte(str[i]))// Appel de la fonction usartSendByte afin d'envoyer un Ã  un les caractÃ¨res qui composent la string reÃ§u.
 3e4:	0e 94 c1 01 	call	0x382	; 0x382 <usartSendByte>
 3e8:	81 11       	cpse	r24, r1
 3ea:	0b c0       	rjmp	.+22     	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
			return i;
		nbChar ++;
 3ec:	cf 5f       	subi	r28, 0xFF	; 255
}

uint8_t usartSendString(const char * str)
{
	uint8_t nbChar = 0;
	for (uint8_t i = 0; str[i]; i++)
 3ee:	f8 01       	movw	r30, r16
 3f0:	ec 0f       	add	r30, r28
 3f2:	f1 1d       	adc	r31, r1
 3f4:	80 81       	ld	r24, Z
 3f6:	81 11       	cpse	r24, r1
 3f8:	f5 cf       	rjmp	.-22     	; 0x3e4 <usartSendString+0x12>
	{
		if(usartSendByte(str[i]))// Appel de la fonction usartSendByte afin d'envoyer un Ã  un les caractÃ¨res qui composent la string reÃ§u.
			return i;
		nbChar ++;
 3fa:	8c 2f       	mov	r24, r28
 3fc:	03 c0       	rjmp	.+6      	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
	return size;
}

uint8_t usartSendString(const char * str)
{
	uint8_t nbChar = 0;
 3fe:	80 e0       	ldi	r24, 0x00	; 0
 400:	01 c0       	rjmp	.+2      	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
 402:	8c 2f       	mov	r24, r28
		if(usartSendByte(str[i]))// Appel de la fonction usartSendByte afin d'envoyer un Ã  un les caractÃ¨res qui composent la string reÃ§u.
			return i;
		nbChar ++;
	}
	return nbChar;
 404:	cf 91       	pop	r28
 406:	1f 91       	pop	r17
 408:	0f 91       	pop	r16
 40a:	08 95       	ret

0000040c <__subsf3>:
 40c:	50 58       	subi	r21, 0x80	; 128

0000040e <__addsf3>:
 40e:	bb 27       	eor	r27, r27
 410:	aa 27       	eor	r26, r26
 412:	0e 94 1e 02 	call	0x43c	; 0x43c <__addsf3x>
 416:	0c 94 f6 02 	jmp	0x5ec	; 0x5ec <__fp_round>
 41a:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <__fp_pscA>
 41e:	38 f0       	brcs	.+14     	; 0x42e <__addsf3+0x20>
 420:	0e 94 ef 02 	call	0x5de	; 0x5de <__fp_pscB>
 424:	20 f0       	brcs	.+8      	; 0x42e <__addsf3+0x20>
 426:	39 f4       	brne	.+14     	; 0x436 <__addsf3+0x28>
 428:	9f 3f       	cpi	r25, 0xFF	; 255
 42a:	19 f4       	brne	.+6      	; 0x432 <__addsf3+0x24>
 42c:	26 f4       	brtc	.+8      	; 0x436 <__addsf3+0x28>
 42e:	0c 94 e5 02 	jmp	0x5ca	; 0x5ca <__fp_nan>
 432:	0e f4       	brtc	.+2      	; 0x436 <__addsf3+0x28>
 434:	e0 95       	com	r30
 436:	e7 fb       	bst	r30, 7
 438:	0c 94 df 02 	jmp	0x5be	; 0x5be <__fp_inf>

0000043c <__addsf3x>:
 43c:	e9 2f       	mov	r30, r25
 43e:	0e 94 07 03 	call	0x60e	; 0x60e <__fp_split3>
 442:	58 f3       	brcs	.-42     	; 0x41a <__addsf3+0xc>
 444:	ba 17       	cp	r27, r26
 446:	62 07       	cpc	r22, r18
 448:	73 07       	cpc	r23, r19
 44a:	84 07       	cpc	r24, r20
 44c:	95 07       	cpc	r25, r21
 44e:	20 f0       	brcs	.+8      	; 0x458 <__addsf3x+0x1c>
 450:	79 f4       	brne	.+30     	; 0x470 <__addsf3x+0x34>
 452:	a6 f5       	brtc	.+104    	; 0x4bc <__addsf3x+0x80>
 454:	0c 94 29 03 	jmp	0x652	; 0x652 <__fp_zero>
 458:	0e f4       	brtc	.+2      	; 0x45c <__addsf3x+0x20>
 45a:	e0 95       	com	r30
 45c:	0b 2e       	mov	r0, r27
 45e:	ba 2f       	mov	r27, r26
 460:	a0 2d       	mov	r26, r0
 462:	0b 01       	movw	r0, r22
 464:	b9 01       	movw	r22, r18
 466:	90 01       	movw	r18, r0
 468:	0c 01       	movw	r0, r24
 46a:	ca 01       	movw	r24, r20
 46c:	a0 01       	movw	r20, r0
 46e:	11 24       	eor	r1, r1
 470:	ff 27       	eor	r31, r31
 472:	59 1b       	sub	r21, r25
 474:	99 f0       	breq	.+38     	; 0x49c <__addsf3x+0x60>
 476:	59 3f       	cpi	r21, 0xF9	; 249
 478:	50 f4       	brcc	.+20     	; 0x48e <__addsf3x+0x52>
 47a:	50 3e       	cpi	r21, 0xE0	; 224
 47c:	68 f1       	brcs	.+90     	; 0x4d8 <__addsf3x+0x9c>
 47e:	1a 16       	cp	r1, r26
 480:	f0 40       	sbci	r31, 0x00	; 0
 482:	a2 2f       	mov	r26, r18
 484:	23 2f       	mov	r18, r19
 486:	34 2f       	mov	r19, r20
 488:	44 27       	eor	r20, r20
 48a:	58 5f       	subi	r21, 0xF8	; 248
 48c:	f3 cf       	rjmp	.-26     	; 0x474 <__addsf3x+0x38>
 48e:	46 95       	lsr	r20
 490:	37 95       	ror	r19
 492:	27 95       	ror	r18
 494:	a7 95       	ror	r26
 496:	f0 40       	sbci	r31, 0x00	; 0
 498:	53 95       	inc	r21
 49a:	c9 f7       	brne	.-14     	; 0x48e <__addsf3x+0x52>
 49c:	7e f4       	brtc	.+30     	; 0x4bc <__addsf3x+0x80>
 49e:	1f 16       	cp	r1, r31
 4a0:	ba 0b       	sbc	r27, r26
 4a2:	62 0b       	sbc	r22, r18
 4a4:	73 0b       	sbc	r23, r19
 4a6:	84 0b       	sbc	r24, r20
 4a8:	ba f0       	brmi	.+46     	; 0x4d8 <__addsf3x+0x9c>
 4aa:	91 50       	subi	r25, 0x01	; 1
 4ac:	a1 f0       	breq	.+40     	; 0x4d6 <__addsf3x+0x9a>
 4ae:	ff 0f       	add	r31, r31
 4b0:	bb 1f       	adc	r27, r27
 4b2:	66 1f       	adc	r22, r22
 4b4:	77 1f       	adc	r23, r23
 4b6:	88 1f       	adc	r24, r24
 4b8:	c2 f7       	brpl	.-16     	; 0x4aa <__addsf3x+0x6e>
 4ba:	0e c0       	rjmp	.+28     	; 0x4d8 <__addsf3x+0x9c>
 4bc:	ba 0f       	add	r27, r26
 4be:	62 1f       	adc	r22, r18
 4c0:	73 1f       	adc	r23, r19
 4c2:	84 1f       	adc	r24, r20
 4c4:	48 f4       	brcc	.+18     	; 0x4d8 <__addsf3x+0x9c>
 4c6:	87 95       	ror	r24
 4c8:	77 95       	ror	r23
 4ca:	67 95       	ror	r22
 4cc:	b7 95       	ror	r27
 4ce:	f7 95       	ror	r31
 4d0:	9e 3f       	cpi	r25, 0xFE	; 254
 4d2:	08 f0       	brcs	.+2      	; 0x4d6 <__addsf3x+0x9a>
 4d4:	b0 cf       	rjmp	.-160    	; 0x436 <__addsf3+0x28>
 4d6:	93 95       	inc	r25
 4d8:	88 0f       	add	r24, r24
 4da:	08 f0       	brcs	.+2      	; 0x4de <__addsf3x+0xa2>
 4dc:	99 27       	eor	r25, r25
 4de:	ee 0f       	add	r30, r30
 4e0:	97 95       	ror	r25
 4e2:	87 95       	ror	r24
 4e4:	08 95       	ret

000004e6 <__fixunssfsi>:
 4e6:	0e 94 0f 03 	call	0x61e	; 0x61e <__fp_splitA>
 4ea:	88 f0       	brcs	.+34     	; 0x50e <__fixunssfsi+0x28>
 4ec:	9f 57       	subi	r25, 0x7F	; 127
 4ee:	98 f0       	brcs	.+38     	; 0x516 <__fixunssfsi+0x30>
 4f0:	b9 2f       	mov	r27, r25
 4f2:	99 27       	eor	r25, r25
 4f4:	b7 51       	subi	r27, 0x17	; 23
 4f6:	b0 f0       	brcs	.+44     	; 0x524 <__fixunssfsi+0x3e>
 4f8:	e1 f0       	breq	.+56     	; 0x532 <__fixunssfsi+0x4c>
 4fa:	66 0f       	add	r22, r22
 4fc:	77 1f       	adc	r23, r23
 4fe:	88 1f       	adc	r24, r24
 500:	99 1f       	adc	r25, r25
 502:	1a f0       	brmi	.+6      	; 0x50a <__fixunssfsi+0x24>
 504:	ba 95       	dec	r27
 506:	c9 f7       	brne	.-14     	; 0x4fa <__fixunssfsi+0x14>
 508:	14 c0       	rjmp	.+40     	; 0x532 <__fixunssfsi+0x4c>
 50a:	b1 30       	cpi	r27, 0x01	; 1
 50c:	91 f0       	breq	.+36     	; 0x532 <__fixunssfsi+0x4c>
 50e:	0e 94 29 03 	call	0x652	; 0x652 <__fp_zero>
 512:	b1 e0       	ldi	r27, 0x01	; 1
 514:	08 95       	ret
 516:	0c 94 29 03 	jmp	0x652	; 0x652 <__fp_zero>
 51a:	67 2f       	mov	r22, r23
 51c:	78 2f       	mov	r23, r24
 51e:	88 27       	eor	r24, r24
 520:	b8 5f       	subi	r27, 0xF8	; 248
 522:	39 f0       	breq	.+14     	; 0x532 <__fixunssfsi+0x4c>
 524:	b9 3f       	cpi	r27, 0xF9	; 249
 526:	cc f3       	brlt	.-14     	; 0x51a <__fixunssfsi+0x34>
 528:	86 95       	lsr	r24
 52a:	77 95       	ror	r23
 52c:	67 95       	ror	r22
 52e:	b3 95       	inc	r27
 530:	d9 f7       	brne	.-10     	; 0x528 <__fixunssfsi+0x42>
 532:	3e f4       	brtc	.+14     	; 0x542 <__fixunssfsi+0x5c>
 534:	90 95       	com	r25
 536:	80 95       	com	r24
 538:	70 95       	com	r23
 53a:	61 95       	neg	r22
 53c:	7f 4f       	sbci	r23, 0xFF	; 255
 53e:	8f 4f       	sbci	r24, 0xFF	; 255
 540:	9f 4f       	sbci	r25, 0xFF	; 255
 542:	08 95       	ret

00000544 <__floatunsisf>:
 544:	e8 94       	clt
 546:	09 c0       	rjmp	.+18     	; 0x55a <__floatsisf+0x12>

00000548 <__floatsisf>:
 548:	97 fb       	bst	r25, 7
 54a:	3e f4       	brtc	.+14     	; 0x55a <__floatsisf+0x12>
 54c:	90 95       	com	r25
 54e:	80 95       	com	r24
 550:	70 95       	com	r23
 552:	61 95       	neg	r22
 554:	7f 4f       	sbci	r23, 0xFF	; 255
 556:	8f 4f       	sbci	r24, 0xFF	; 255
 558:	9f 4f       	sbci	r25, 0xFF	; 255
 55a:	99 23       	and	r25, r25
 55c:	a9 f0       	breq	.+42     	; 0x588 <__floatsisf+0x40>
 55e:	f9 2f       	mov	r31, r25
 560:	96 e9       	ldi	r25, 0x96	; 150
 562:	bb 27       	eor	r27, r27
 564:	93 95       	inc	r25
 566:	f6 95       	lsr	r31
 568:	87 95       	ror	r24
 56a:	77 95       	ror	r23
 56c:	67 95       	ror	r22
 56e:	b7 95       	ror	r27
 570:	f1 11       	cpse	r31, r1
 572:	f8 cf       	rjmp	.-16     	; 0x564 <__floatsisf+0x1c>
 574:	fa f4       	brpl	.+62     	; 0x5b4 <__floatsisf+0x6c>
 576:	bb 0f       	add	r27, r27
 578:	11 f4       	brne	.+4      	; 0x57e <__floatsisf+0x36>
 57a:	60 ff       	sbrs	r22, 0
 57c:	1b c0       	rjmp	.+54     	; 0x5b4 <__floatsisf+0x6c>
 57e:	6f 5f       	subi	r22, 0xFF	; 255
 580:	7f 4f       	sbci	r23, 0xFF	; 255
 582:	8f 4f       	sbci	r24, 0xFF	; 255
 584:	9f 4f       	sbci	r25, 0xFF	; 255
 586:	16 c0       	rjmp	.+44     	; 0x5b4 <__floatsisf+0x6c>
 588:	88 23       	and	r24, r24
 58a:	11 f0       	breq	.+4      	; 0x590 <__floatsisf+0x48>
 58c:	96 e9       	ldi	r25, 0x96	; 150
 58e:	11 c0       	rjmp	.+34     	; 0x5b2 <__floatsisf+0x6a>
 590:	77 23       	and	r23, r23
 592:	21 f0       	breq	.+8      	; 0x59c <__floatsisf+0x54>
 594:	9e e8       	ldi	r25, 0x8E	; 142
 596:	87 2f       	mov	r24, r23
 598:	76 2f       	mov	r23, r22
 59a:	05 c0       	rjmp	.+10     	; 0x5a6 <__floatsisf+0x5e>
 59c:	66 23       	and	r22, r22
 59e:	71 f0       	breq	.+28     	; 0x5bc <__floatsisf+0x74>
 5a0:	96 e8       	ldi	r25, 0x86	; 134
 5a2:	86 2f       	mov	r24, r22
 5a4:	70 e0       	ldi	r23, 0x00	; 0
 5a6:	60 e0       	ldi	r22, 0x00	; 0
 5a8:	2a f0       	brmi	.+10     	; 0x5b4 <__floatsisf+0x6c>
 5aa:	9a 95       	dec	r25
 5ac:	66 0f       	add	r22, r22
 5ae:	77 1f       	adc	r23, r23
 5b0:	88 1f       	adc	r24, r24
 5b2:	da f7       	brpl	.-10     	; 0x5aa <__floatsisf+0x62>
 5b4:	88 0f       	add	r24, r24
 5b6:	96 95       	lsr	r25
 5b8:	87 95       	ror	r24
 5ba:	97 f9       	bld	r25, 7
 5bc:	08 95       	ret

000005be <__fp_inf>:
 5be:	97 f9       	bld	r25, 7
 5c0:	9f 67       	ori	r25, 0x7F	; 127
 5c2:	80 e8       	ldi	r24, 0x80	; 128
 5c4:	70 e0       	ldi	r23, 0x00	; 0
 5c6:	60 e0       	ldi	r22, 0x00	; 0
 5c8:	08 95       	ret

000005ca <__fp_nan>:
 5ca:	9f ef       	ldi	r25, 0xFF	; 255
 5cc:	80 ec       	ldi	r24, 0xC0	; 192
 5ce:	08 95       	ret

000005d0 <__fp_pscA>:
 5d0:	00 24       	eor	r0, r0
 5d2:	0a 94       	dec	r0
 5d4:	16 16       	cp	r1, r22
 5d6:	17 06       	cpc	r1, r23
 5d8:	18 06       	cpc	r1, r24
 5da:	09 06       	cpc	r0, r25
 5dc:	08 95       	ret

000005de <__fp_pscB>:
 5de:	00 24       	eor	r0, r0
 5e0:	0a 94       	dec	r0
 5e2:	12 16       	cp	r1, r18
 5e4:	13 06       	cpc	r1, r19
 5e6:	14 06       	cpc	r1, r20
 5e8:	05 06       	cpc	r0, r21
 5ea:	08 95       	ret

000005ec <__fp_round>:
 5ec:	09 2e       	mov	r0, r25
 5ee:	03 94       	inc	r0
 5f0:	00 0c       	add	r0, r0
 5f2:	11 f4       	brne	.+4      	; 0x5f8 <__fp_round+0xc>
 5f4:	88 23       	and	r24, r24
 5f6:	52 f0       	brmi	.+20     	; 0x60c <__fp_round+0x20>
 5f8:	bb 0f       	add	r27, r27
 5fa:	40 f4       	brcc	.+16     	; 0x60c <__fp_round+0x20>
 5fc:	bf 2b       	or	r27, r31
 5fe:	11 f4       	brne	.+4      	; 0x604 <__fp_round+0x18>
 600:	60 ff       	sbrs	r22, 0
 602:	04 c0       	rjmp	.+8      	; 0x60c <__fp_round+0x20>
 604:	6f 5f       	subi	r22, 0xFF	; 255
 606:	7f 4f       	sbci	r23, 0xFF	; 255
 608:	8f 4f       	sbci	r24, 0xFF	; 255
 60a:	9f 4f       	sbci	r25, 0xFF	; 255
 60c:	08 95       	ret

0000060e <__fp_split3>:
 60e:	57 fd       	sbrc	r21, 7
 610:	90 58       	subi	r25, 0x80	; 128
 612:	44 0f       	add	r20, r20
 614:	55 1f       	adc	r21, r21
 616:	59 f0       	breq	.+22     	; 0x62e <__fp_splitA+0x10>
 618:	5f 3f       	cpi	r21, 0xFF	; 255
 61a:	71 f0       	breq	.+28     	; 0x638 <__fp_splitA+0x1a>
 61c:	47 95       	ror	r20

0000061e <__fp_splitA>:
 61e:	88 0f       	add	r24, r24
 620:	97 fb       	bst	r25, 7
 622:	99 1f       	adc	r25, r25
 624:	61 f0       	breq	.+24     	; 0x63e <__fp_splitA+0x20>
 626:	9f 3f       	cpi	r25, 0xFF	; 255
 628:	79 f0       	breq	.+30     	; 0x648 <__fp_splitA+0x2a>
 62a:	87 95       	ror	r24
 62c:	08 95       	ret
 62e:	12 16       	cp	r1, r18
 630:	13 06       	cpc	r1, r19
 632:	14 06       	cpc	r1, r20
 634:	55 1f       	adc	r21, r21
 636:	f2 cf       	rjmp	.-28     	; 0x61c <__fp_split3+0xe>
 638:	46 95       	lsr	r20
 63a:	f1 df       	rcall	.-30     	; 0x61e <__fp_splitA>
 63c:	08 c0       	rjmp	.+16     	; 0x64e <__fp_splitA+0x30>
 63e:	16 16       	cp	r1, r22
 640:	17 06       	cpc	r1, r23
 642:	18 06       	cpc	r1, r24
 644:	99 1f       	adc	r25, r25
 646:	f1 cf       	rjmp	.-30     	; 0x62a <__fp_splitA+0xc>
 648:	86 95       	lsr	r24
 64a:	71 05       	cpc	r23, r1
 64c:	61 05       	cpc	r22, r1
 64e:	08 94       	sec
 650:	08 95       	ret

00000652 <__fp_zero>:
 652:	e8 94       	clt

00000654 <__fp_szero>:
 654:	bb 27       	eor	r27, r27
 656:	66 27       	eor	r22, r22
 658:	77 27       	eor	r23, r23
 65a:	cb 01       	movw	r24, r22
 65c:	97 f9       	bld	r25, 7
 65e:	08 95       	ret

00000660 <__udivmodsi4>:
 660:	a1 e2       	ldi	r26, 0x21	; 33
 662:	1a 2e       	mov	r1, r26
 664:	aa 1b       	sub	r26, r26
 666:	bb 1b       	sub	r27, r27
 668:	fd 01       	movw	r30, r26
 66a:	0d c0       	rjmp	.+26     	; 0x686 <__udivmodsi4_ep>

0000066c <__udivmodsi4_loop>:
 66c:	aa 1f       	adc	r26, r26
 66e:	bb 1f       	adc	r27, r27
 670:	ee 1f       	adc	r30, r30
 672:	ff 1f       	adc	r31, r31
 674:	a2 17       	cp	r26, r18
 676:	b3 07       	cpc	r27, r19
 678:	e4 07       	cpc	r30, r20
 67a:	f5 07       	cpc	r31, r21
 67c:	20 f0       	brcs	.+8      	; 0x686 <__udivmodsi4_ep>
 67e:	a2 1b       	sub	r26, r18
 680:	b3 0b       	sbc	r27, r19
 682:	e4 0b       	sbc	r30, r20
 684:	f5 0b       	sbc	r31, r21

00000686 <__udivmodsi4_ep>:
 686:	66 1f       	adc	r22, r22
 688:	77 1f       	adc	r23, r23
 68a:	88 1f       	adc	r24, r24
 68c:	99 1f       	adc	r25, r25
 68e:	1a 94       	dec	r1
 690:	69 f7       	brne	.-38     	; 0x66c <__udivmodsi4_loop>
 692:	60 95       	com	r22
 694:	70 95       	com	r23
 696:	80 95       	com	r24
 698:	90 95       	com	r25
 69a:	9b 01       	movw	r18, r22
 69c:	ac 01       	movw	r20, r24
 69e:	bd 01       	movw	r22, r26
 6a0:	cf 01       	movw	r24, r30
 6a2:	08 95       	ret

000006a4 <sprintf>:
 6a4:	ae e0       	ldi	r26, 0x0E	; 14
 6a6:	b0 e0       	ldi	r27, 0x00	; 0
 6a8:	e8 e5       	ldi	r30, 0x58	; 88
 6aa:	f3 e0       	ldi	r31, 0x03	; 3
 6ac:	0c 94 13 06 	jmp	0xc26	; 0xc26 <__prologue_saves__+0x1c>
 6b0:	0d 89       	ldd	r16, Y+21	; 0x15
 6b2:	1e 89       	ldd	r17, Y+22	; 0x16
 6b4:	86 e0       	ldi	r24, 0x06	; 6
 6b6:	8c 83       	std	Y+4, r24	; 0x04
 6b8:	1a 83       	std	Y+2, r17	; 0x02
 6ba:	09 83       	std	Y+1, r16	; 0x01
 6bc:	8f ef       	ldi	r24, 0xFF	; 255
 6be:	9f e7       	ldi	r25, 0x7F	; 127
 6c0:	9e 83       	std	Y+6, r25	; 0x06
 6c2:	8d 83       	std	Y+5, r24	; 0x05
 6c4:	ae 01       	movw	r20, r28
 6c6:	47 5e       	subi	r20, 0xE7	; 231
 6c8:	5f 4f       	sbci	r21, 0xFF	; 255
 6ca:	6f 89       	ldd	r22, Y+23	; 0x17
 6cc:	78 8d       	ldd	r23, Y+24	; 0x18
 6ce:	ce 01       	movw	r24, r28
 6d0:	01 96       	adiw	r24, 0x01	; 1
 6d2:	0e 94 74 03 	call	0x6e8	; 0x6e8 <vfprintf>
 6d6:	ef 81       	ldd	r30, Y+7	; 0x07
 6d8:	f8 85       	ldd	r31, Y+8	; 0x08
 6da:	e0 0f       	add	r30, r16
 6dc:	f1 1f       	adc	r31, r17
 6de:	10 82       	st	Z, r1
 6e0:	2e 96       	adiw	r28, 0x0e	; 14
 6e2:	e4 e0       	ldi	r30, 0x04	; 4
 6e4:	0c 94 2f 06 	jmp	0xc5e	; 0xc5e <__epilogue_restores__+0x1c>

000006e8 <vfprintf>:
 6e8:	ab e0       	ldi	r26, 0x0B	; 11
 6ea:	b0 e0       	ldi	r27, 0x00	; 0
 6ec:	ea e7       	ldi	r30, 0x7A	; 122
 6ee:	f3 e0       	ldi	r31, 0x03	; 3
 6f0:	0c 94 05 06 	jmp	0xc0a	; 0xc0a <__prologue_saves__>
 6f4:	6c 01       	movw	r12, r24
 6f6:	7b 01       	movw	r14, r22
 6f8:	8a 01       	movw	r16, r20
 6fa:	fc 01       	movw	r30, r24
 6fc:	17 82       	std	Z+7, r1	; 0x07
 6fe:	16 82       	std	Z+6, r1	; 0x06
 700:	83 81       	ldd	r24, Z+3	; 0x03
 702:	81 ff       	sbrs	r24, 1
 704:	cc c1       	rjmp	.+920    	; 0xa9e <__DATA_REGION_LENGTH__+0x9e>
 706:	ce 01       	movw	r24, r28
 708:	01 96       	adiw	r24, 0x01	; 1
 70a:	3c 01       	movw	r6, r24
 70c:	f6 01       	movw	r30, r12
 70e:	93 81       	ldd	r25, Z+3	; 0x03
 710:	f7 01       	movw	r30, r14
 712:	93 fd       	sbrc	r25, 3
 714:	85 91       	lpm	r24, Z+
 716:	93 ff       	sbrs	r25, 3
 718:	81 91       	ld	r24, Z+
 71a:	7f 01       	movw	r14, r30
 71c:	88 23       	and	r24, r24
 71e:	09 f4       	brne	.+2      	; 0x722 <vfprintf+0x3a>
 720:	ba c1       	rjmp	.+884    	; 0xa96 <__DATA_REGION_LENGTH__+0x96>
 722:	85 32       	cpi	r24, 0x25	; 37
 724:	39 f4       	brne	.+14     	; 0x734 <vfprintf+0x4c>
 726:	93 fd       	sbrc	r25, 3
 728:	85 91       	lpm	r24, Z+
 72a:	93 ff       	sbrs	r25, 3
 72c:	81 91       	ld	r24, Z+
 72e:	7f 01       	movw	r14, r30
 730:	85 32       	cpi	r24, 0x25	; 37
 732:	29 f4       	brne	.+10     	; 0x73e <vfprintf+0x56>
 734:	b6 01       	movw	r22, r12
 736:	90 e0       	ldi	r25, 0x00	; 0
 738:	0e 94 6b 05 	call	0xad6	; 0xad6 <fputc>
 73c:	e7 cf       	rjmp	.-50     	; 0x70c <vfprintf+0x24>
 73e:	91 2c       	mov	r9, r1
 740:	21 2c       	mov	r2, r1
 742:	31 2c       	mov	r3, r1
 744:	ff e1       	ldi	r31, 0x1F	; 31
 746:	f3 15       	cp	r31, r3
 748:	d8 f0       	brcs	.+54     	; 0x780 <vfprintf+0x98>
 74a:	8b 32       	cpi	r24, 0x2B	; 43
 74c:	79 f0       	breq	.+30     	; 0x76c <vfprintf+0x84>
 74e:	38 f4       	brcc	.+14     	; 0x75e <vfprintf+0x76>
 750:	80 32       	cpi	r24, 0x20	; 32
 752:	79 f0       	breq	.+30     	; 0x772 <vfprintf+0x8a>
 754:	83 32       	cpi	r24, 0x23	; 35
 756:	a1 f4       	brne	.+40     	; 0x780 <vfprintf+0x98>
 758:	23 2d       	mov	r18, r3
 75a:	20 61       	ori	r18, 0x10	; 16
 75c:	1d c0       	rjmp	.+58     	; 0x798 <vfprintf+0xb0>
 75e:	8d 32       	cpi	r24, 0x2D	; 45
 760:	61 f0       	breq	.+24     	; 0x77a <vfprintf+0x92>
 762:	80 33       	cpi	r24, 0x30	; 48
 764:	69 f4       	brne	.+26     	; 0x780 <vfprintf+0x98>
 766:	23 2d       	mov	r18, r3
 768:	21 60       	ori	r18, 0x01	; 1
 76a:	16 c0       	rjmp	.+44     	; 0x798 <vfprintf+0xb0>
 76c:	83 2d       	mov	r24, r3
 76e:	82 60       	ori	r24, 0x02	; 2
 770:	38 2e       	mov	r3, r24
 772:	e3 2d       	mov	r30, r3
 774:	e4 60       	ori	r30, 0x04	; 4
 776:	3e 2e       	mov	r3, r30
 778:	2a c0       	rjmp	.+84     	; 0x7ce <vfprintf+0xe6>
 77a:	f3 2d       	mov	r31, r3
 77c:	f8 60       	ori	r31, 0x08	; 8
 77e:	1d c0       	rjmp	.+58     	; 0x7ba <vfprintf+0xd2>
 780:	37 fc       	sbrc	r3, 7
 782:	2d c0       	rjmp	.+90     	; 0x7de <vfprintf+0xf6>
 784:	20 ed       	ldi	r18, 0xD0	; 208
 786:	28 0f       	add	r18, r24
 788:	2a 30       	cpi	r18, 0x0A	; 10
 78a:	40 f0       	brcs	.+16     	; 0x79c <vfprintf+0xb4>
 78c:	8e 32       	cpi	r24, 0x2E	; 46
 78e:	b9 f4       	brne	.+46     	; 0x7be <vfprintf+0xd6>
 790:	36 fc       	sbrc	r3, 6
 792:	81 c1       	rjmp	.+770    	; 0xa96 <__DATA_REGION_LENGTH__+0x96>
 794:	23 2d       	mov	r18, r3
 796:	20 64       	ori	r18, 0x40	; 64
 798:	32 2e       	mov	r3, r18
 79a:	19 c0       	rjmp	.+50     	; 0x7ce <vfprintf+0xe6>
 79c:	36 fe       	sbrs	r3, 6
 79e:	06 c0       	rjmp	.+12     	; 0x7ac <vfprintf+0xc4>
 7a0:	8a e0       	ldi	r24, 0x0A	; 10
 7a2:	98 9e       	mul	r9, r24
 7a4:	20 0d       	add	r18, r0
 7a6:	11 24       	eor	r1, r1
 7a8:	92 2e       	mov	r9, r18
 7aa:	11 c0       	rjmp	.+34     	; 0x7ce <vfprintf+0xe6>
 7ac:	ea e0       	ldi	r30, 0x0A	; 10
 7ae:	2e 9e       	mul	r2, r30
 7b0:	20 0d       	add	r18, r0
 7b2:	11 24       	eor	r1, r1
 7b4:	22 2e       	mov	r2, r18
 7b6:	f3 2d       	mov	r31, r3
 7b8:	f0 62       	ori	r31, 0x20	; 32
 7ba:	3f 2e       	mov	r3, r31
 7bc:	08 c0       	rjmp	.+16     	; 0x7ce <vfprintf+0xe6>
 7be:	8c 36       	cpi	r24, 0x6C	; 108
 7c0:	21 f4       	brne	.+8      	; 0x7ca <vfprintf+0xe2>
 7c2:	83 2d       	mov	r24, r3
 7c4:	80 68       	ori	r24, 0x80	; 128
 7c6:	38 2e       	mov	r3, r24
 7c8:	02 c0       	rjmp	.+4      	; 0x7ce <vfprintf+0xe6>
 7ca:	88 36       	cpi	r24, 0x68	; 104
 7cc:	41 f4       	brne	.+16     	; 0x7de <vfprintf+0xf6>
 7ce:	f7 01       	movw	r30, r14
 7d0:	93 fd       	sbrc	r25, 3
 7d2:	85 91       	lpm	r24, Z+
 7d4:	93 ff       	sbrs	r25, 3
 7d6:	81 91       	ld	r24, Z+
 7d8:	7f 01       	movw	r14, r30
 7da:	81 11       	cpse	r24, r1
 7dc:	b3 cf       	rjmp	.-154    	; 0x744 <vfprintf+0x5c>
 7de:	98 2f       	mov	r25, r24
 7e0:	9f 7d       	andi	r25, 0xDF	; 223
 7e2:	95 54       	subi	r25, 0x45	; 69
 7e4:	93 30       	cpi	r25, 0x03	; 3
 7e6:	28 f4       	brcc	.+10     	; 0x7f2 <vfprintf+0x10a>
 7e8:	0c 5f       	subi	r16, 0xFC	; 252
 7ea:	1f 4f       	sbci	r17, 0xFF	; 255
 7ec:	9f e3       	ldi	r25, 0x3F	; 63
 7ee:	99 83       	std	Y+1, r25	; 0x01
 7f0:	0d c0       	rjmp	.+26     	; 0x80c <vfprintf+0x124>
 7f2:	83 36       	cpi	r24, 0x63	; 99
 7f4:	31 f0       	breq	.+12     	; 0x802 <vfprintf+0x11a>
 7f6:	83 37       	cpi	r24, 0x73	; 115
 7f8:	71 f0       	breq	.+28     	; 0x816 <vfprintf+0x12e>
 7fa:	83 35       	cpi	r24, 0x53	; 83
 7fc:	09 f0       	breq	.+2      	; 0x800 <vfprintf+0x118>
 7fe:	59 c0       	rjmp	.+178    	; 0x8b2 <vfprintf+0x1ca>
 800:	21 c0       	rjmp	.+66     	; 0x844 <vfprintf+0x15c>
 802:	f8 01       	movw	r30, r16
 804:	80 81       	ld	r24, Z
 806:	89 83       	std	Y+1, r24	; 0x01
 808:	0e 5f       	subi	r16, 0xFE	; 254
 80a:	1f 4f       	sbci	r17, 0xFF	; 255
 80c:	88 24       	eor	r8, r8
 80e:	83 94       	inc	r8
 810:	91 2c       	mov	r9, r1
 812:	53 01       	movw	r10, r6
 814:	13 c0       	rjmp	.+38     	; 0x83c <vfprintf+0x154>
 816:	28 01       	movw	r4, r16
 818:	f2 e0       	ldi	r31, 0x02	; 2
 81a:	4f 0e       	add	r4, r31
 81c:	51 1c       	adc	r5, r1
 81e:	f8 01       	movw	r30, r16
 820:	a0 80       	ld	r10, Z
 822:	b1 80       	ldd	r11, Z+1	; 0x01
 824:	36 fe       	sbrs	r3, 6
 826:	03 c0       	rjmp	.+6      	; 0x82e <vfprintf+0x146>
 828:	69 2d       	mov	r22, r9
 82a:	70 e0       	ldi	r23, 0x00	; 0
 82c:	02 c0       	rjmp	.+4      	; 0x832 <vfprintf+0x14a>
 82e:	6f ef       	ldi	r22, 0xFF	; 255
 830:	7f ef       	ldi	r23, 0xFF	; 255
 832:	c5 01       	movw	r24, r10
 834:	0e 94 60 05 	call	0xac0	; 0xac0 <strnlen>
 838:	4c 01       	movw	r8, r24
 83a:	82 01       	movw	r16, r4
 83c:	f3 2d       	mov	r31, r3
 83e:	ff 77       	andi	r31, 0x7F	; 127
 840:	3f 2e       	mov	r3, r31
 842:	16 c0       	rjmp	.+44     	; 0x870 <vfprintf+0x188>
 844:	28 01       	movw	r4, r16
 846:	22 e0       	ldi	r18, 0x02	; 2
 848:	42 0e       	add	r4, r18
 84a:	51 1c       	adc	r5, r1
 84c:	f8 01       	movw	r30, r16
 84e:	a0 80       	ld	r10, Z
 850:	b1 80       	ldd	r11, Z+1	; 0x01
 852:	36 fe       	sbrs	r3, 6
 854:	03 c0       	rjmp	.+6      	; 0x85c <vfprintf+0x174>
 856:	69 2d       	mov	r22, r9
 858:	70 e0       	ldi	r23, 0x00	; 0
 85a:	02 c0       	rjmp	.+4      	; 0x860 <vfprintf+0x178>
 85c:	6f ef       	ldi	r22, 0xFF	; 255
 85e:	7f ef       	ldi	r23, 0xFF	; 255
 860:	c5 01       	movw	r24, r10
 862:	0e 94 55 05 	call	0xaaa	; 0xaaa <strnlen_P>
 866:	4c 01       	movw	r8, r24
 868:	f3 2d       	mov	r31, r3
 86a:	f0 68       	ori	r31, 0x80	; 128
 86c:	3f 2e       	mov	r3, r31
 86e:	82 01       	movw	r16, r4
 870:	33 fc       	sbrc	r3, 3
 872:	1b c0       	rjmp	.+54     	; 0x8aa <vfprintf+0x1c2>
 874:	82 2d       	mov	r24, r2
 876:	90 e0       	ldi	r25, 0x00	; 0
 878:	88 16       	cp	r8, r24
 87a:	99 06       	cpc	r9, r25
 87c:	b0 f4       	brcc	.+44     	; 0x8aa <vfprintf+0x1c2>
 87e:	b6 01       	movw	r22, r12
 880:	80 e2       	ldi	r24, 0x20	; 32
 882:	90 e0       	ldi	r25, 0x00	; 0
 884:	0e 94 6b 05 	call	0xad6	; 0xad6 <fputc>
 888:	2a 94       	dec	r2
 88a:	f4 cf       	rjmp	.-24     	; 0x874 <vfprintf+0x18c>
 88c:	f5 01       	movw	r30, r10
 88e:	37 fc       	sbrc	r3, 7
 890:	85 91       	lpm	r24, Z+
 892:	37 fe       	sbrs	r3, 7
 894:	81 91       	ld	r24, Z+
 896:	5f 01       	movw	r10, r30
 898:	b6 01       	movw	r22, r12
 89a:	90 e0       	ldi	r25, 0x00	; 0
 89c:	0e 94 6b 05 	call	0xad6	; 0xad6 <fputc>
 8a0:	21 10       	cpse	r2, r1
 8a2:	2a 94       	dec	r2
 8a4:	21 e0       	ldi	r18, 0x01	; 1
 8a6:	82 1a       	sub	r8, r18
 8a8:	91 08       	sbc	r9, r1
 8aa:	81 14       	cp	r8, r1
 8ac:	91 04       	cpc	r9, r1
 8ae:	71 f7       	brne	.-36     	; 0x88c <vfprintf+0x1a4>
 8b0:	e8 c0       	rjmp	.+464    	; 0xa82 <__DATA_REGION_LENGTH__+0x82>
 8b2:	84 36       	cpi	r24, 0x64	; 100
 8b4:	11 f0       	breq	.+4      	; 0x8ba <vfprintf+0x1d2>
 8b6:	89 36       	cpi	r24, 0x69	; 105
 8b8:	41 f5       	brne	.+80     	; 0x90a <vfprintf+0x222>
 8ba:	f8 01       	movw	r30, r16
 8bc:	37 fe       	sbrs	r3, 7
 8be:	07 c0       	rjmp	.+14     	; 0x8ce <vfprintf+0x1e6>
 8c0:	60 81       	ld	r22, Z
 8c2:	71 81       	ldd	r23, Z+1	; 0x01
 8c4:	82 81       	ldd	r24, Z+2	; 0x02
 8c6:	93 81       	ldd	r25, Z+3	; 0x03
 8c8:	0c 5f       	subi	r16, 0xFC	; 252
 8ca:	1f 4f       	sbci	r17, 0xFF	; 255
 8cc:	08 c0       	rjmp	.+16     	; 0x8de <vfprintf+0x1f6>
 8ce:	60 81       	ld	r22, Z
 8d0:	71 81       	ldd	r23, Z+1	; 0x01
 8d2:	07 2e       	mov	r0, r23
 8d4:	00 0c       	add	r0, r0
 8d6:	88 0b       	sbc	r24, r24
 8d8:	99 0b       	sbc	r25, r25
 8da:	0e 5f       	subi	r16, 0xFE	; 254
 8dc:	1f 4f       	sbci	r17, 0xFF	; 255
 8de:	f3 2d       	mov	r31, r3
 8e0:	ff 76       	andi	r31, 0x6F	; 111
 8e2:	3f 2e       	mov	r3, r31
 8e4:	97 ff       	sbrs	r25, 7
 8e6:	09 c0       	rjmp	.+18     	; 0x8fa <vfprintf+0x212>
 8e8:	90 95       	com	r25
 8ea:	80 95       	com	r24
 8ec:	70 95       	com	r23
 8ee:	61 95       	neg	r22
 8f0:	7f 4f       	sbci	r23, 0xFF	; 255
 8f2:	8f 4f       	sbci	r24, 0xFF	; 255
 8f4:	9f 4f       	sbci	r25, 0xFF	; 255
 8f6:	f0 68       	ori	r31, 0x80	; 128
 8f8:	3f 2e       	mov	r3, r31
 8fa:	2a e0       	ldi	r18, 0x0A	; 10
 8fc:	30 e0       	ldi	r19, 0x00	; 0
 8fe:	a3 01       	movw	r20, r6
 900:	0e 94 a7 05 	call	0xb4e	; 0xb4e <__ultoa_invert>
 904:	88 2e       	mov	r8, r24
 906:	86 18       	sub	r8, r6
 908:	45 c0       	rjmp	.+138    	; 0x994 <vfprintf+0x2ac>
 90a:	85 37       	cpi	r24, 0x75	; 117
 90c:	31 f4       	brne	.+12     	; 0x91a <vfprintf+0x232>
 90e:	23 2d       	mov	r18, r3
 910:	2f 7e       	andi	r18, 0xEF	; 239
 912:	b2 2e       	mov	r11, r18
 914:	2a e0       	ldi	r18, 0x0A	; 10
 916:	30 e0       	ldi	r19, 0x00	; 0
 918:	25 c0       	rjmp	.+74     	; 0x964 <vfprintf+0x27c>
 91a:	93 2d       	mov	r25, r3
 91c:	99 7f       	andi	r25, 0xF9	; 249
 91e:	b9 2e       	mov	r11, r25
 920:	8f 36       	cpi	r24, 0x6F	; 111
 922:	c1 f0       	breq	.+48     	; 0x954 <vfprintf+0x26c>
 924:	18 f4       	brcc	.+6      	; 0x92c <vfprintf+0x244>
 926:	88 35       	cpi	r24, 0x58	; 88
 928:	79 f0       	breq	.+30     	; 0x948 <vfprintf+0x260>
 92a:	b5 c0       	rjmp	.+362    	; 0xa96 <__DATA_REGION_LENGTH__+0x96>
 92c:	80 37       	cpi	r24, 0x70	; 112
 92e:	19 f0       	breq	.+6      	; 0x936 <vfprintf+0x24e>
 930:	88 37       	cpi	r24, 0x78	; 120
 932:	21 f0       	breq	.+8      	; 0x93c <vfprintf+0x254>
 934:	b0 c0       	rjmp	.+352    	; 0xa96 <__DATA_REGION_LENGTH__+0x96>
 936:	e9 2f       	mov	r30, r25
 938:	e0 61       	ori	r30, 0x10	; 16
 93a:	be 2e       	mov	r11, r30
 93c:	b4 fe       	sbrs	r11, 4
 93e:	0d c0       	rjmp	.+26     	; 0x95a <vfprintf+0x272>
 940:	fb 2d       	mov	r31, r11
 942:	f4 60       	ori	r31, 0x04	; 4
 944:	bf 2e       	mov	r11, r31
 946:	09 c0       	rjmp	.+18     	; 0x95a <vfprintf+0x272>
 948:	34 fe       	sbrs	r3, 4
 94a:	0a c0       	rjmp	.+20     	; 0x960 <vfprintf+0x278>
 94c:	29 2f       	mov	r18, r25
 94e:	26 60       	ori	r18, 0x06	; 6
 950:	b2 2e       	mov	r11, r18
 952:	06 c0       	rjmp	.+12     	; 0x960 <vfprintf+0x278>
 954:	28 e0       	ldi	r18, 0x08	; 8
 956:	30 e0       	ldi	r19, 0x00	; 0
 958:	05 c0       	rjmp	.+10     	; 0x964 <vfprintf+0x27c>
 95a:	20 e1       	ldi	r18, 0x10	; 16
 95c:	30 e0       	ldi	r19, 0x00	; 0
 95e:	02 c0       	rjmp	.+4      	; 0x964 <vfprintf+0x27c>
 960:	20 e1       	ldi	r18, 0x10	; 16
 962:	32 e0       	ldi	r19, 0x02	; 2
 964:	f8 01       	movw	r30, r16
 966:	b7 fe       	sbrs	r11, 7
 968:	07 c0       	rjmp	.+14     	; 0x978 <vfprintf+0x290>
 96a:	60 81       	ld	r22, Z
 96c:	71 81       	ldd	r23, Z+1	; 0x01
 96e:	82 81       	ldd	r24, Z+2	; 0x02
 970:	93 81       	ldd	r25, Z+3	; 0x03
 972:	0c 5f       	subi	r16, 0xFC	; 252
 974:	1f 4f       	sbci	r17, 0xFF	; 255
 976:	06 c0       	rjmp	.+12     	; 0x984 <vfprintf+0x29c>
 978:	60 81       	ld	r22, Z
 97a:	71 81       	ldd	r23, Z+1	; 0x01
 97c:	80 e0       	ldi	r24, 0x00	; 0
 97e:	90 e0       	ldi	r25, 0x00	; 0
 980:	0e 5f       	subi	r16, 0xFE	; 254
 982:	1f 4f       	sbci	r17, 0xFF	; 255
 984:	a3 01       	movw	r20, r6
 986:	0e 94 a7 05 	call	0xb4e	; 0xb4e <__ultoa_invert>
 98a:	88 2e       	mov	r8, r24
 98c:	86 18       	sub	r8, r6
 98e:	fb 2d       	mov	r31, r11
 990:	ff 77       	andi	r31, 0x7F	; 127
 992:	3f 2e       	mov	r3, r31
 994:	36 fe       	sbrs	r3, 6
 996:	0d c0       	rjmp	.+26     	; 0x9b2 <vfprintf+0x2ca>
 998:	23 2d       	mov	r18, r3
 99a:	2e 7f       	andi	r18, 0xFE	; 254
 99c:	a2 2e       	mov	r10, r18
 99e:	89 14       	cp	r8, r9
 9a0:	58 f4       	brcc	.+22     	; 0x9b8 <vfprintf+0x2d0>
 9a2:	34 fe       	sbrs	r3, 4
 9a4:	0b c0       	rjmp	.+22     	; 0x9bc <vfprintf+0x2d4>
 9a6:	32 fc       	sbrc	r3, 2
 9a8:	09 c0       	rjmp	.+18     	; 0x9bc <vfprintf+0x2d4>
 9aa:	83 2d       	mov	r24, r3
 9ac:	8e 7e       	andi	r24, 0xEE	; 238
 9ae:	a8 2e       	mov	r10, r24
 9b0:	05 c0       	rjmp	.+10     	; 0x9bc <vfprintf+0x2d4>
 9b2:	b8 2c       	mov	r11, r8
 9b4:	a3 2c       	mov	r10, r3
 9b6:	03 c0       	rjmp	.+6      	; 0x9be <vfprintf+0x2d6>
 9b8:	b8 2c       	mov	r11, r8
 9ba:	01 c0       	rjmp	.+2      	; 0x9be <vfprintf+0x2d6>
 9bc:	b9 2c       	mov	r11, r9
 9be:	a4 fe       	sbrs	r10, 4
 9c0:	0f c0       	rjmp	.+30     	; 0x9e0 <vfprintf+0x2f8>
 9c2:	fe 01       	movw	r30, r28
 9c4:	e8 0d       	add	r30, r8
 9c6:	f1 1d       	adc	r31, r1
 9c8:	80 81       	ld	r24, Z
 9ca:	80 33       	cpi	r24, 0x30	; 48
 9cc:	21 f4       	brne	.+8      	; 0x9d6 <vfprintf+0x2ee>
 9ce:	9a 2d       	mov	r25, r10
 9d0:	99 7e       	andi	r25, 0xE9	; 233
 9d2:	a9 2e       	mov	r10, r25
 9d4:	09 c0       	rjmp	.+18     	; 0x9e8 <vfprintf+0x300>
 9d6:	a2 fe       	sbrs	r10, 2
 9d8:	06 c0       	rjmp	.+12     	; 0x9e6 <vfprintf+0x2fe>
 9da:	b3 94       	inc	r11
 9dc:	b3 94       	inc	r11
 9de:	04 c0       	rjmp	.+8      	; 0x9e8 <vfprintf+0x300>
 9e0:	8a 2d       	mov	r24, r10
 9e2:	86 78       	andi	r24, 0x86	; 134
 9e4:	09 f0       	breq	.+2      	; 0x9e8 <vfprintf+0x300>
 9e6:	b3 94       	inc	r11
 9e8:	a3 fc       	sbrc	r10, 3
 9ea:	11 c0       	rjmp	.+34     	; 0xa0e <__DATA_REGION_LENGTH__+0xe>
 9ec:	a0 fe       	sbrs	r10, 0
 9ee:	06 c0       	rjmp	.+12     	; 0x9fc <vfprintf+0x314>
 9f0:	b2 14       	cp	r11, r2
 9f2:	88 f4       	brcc	.+34     	; 0xa16 <__DATA_REGION_LENGTH__+0x16>
 9f4:	28 0c       	add	r2, r8
 9f6:	92 2c       	mov	r9, r2
 9f8:	9b 18       	sub	r9, r11
 9fa:	0e c0       	rjmp	.+28     	; 0xa18 <__DATA_REGION_LENGTH__+0x18>
 9fc:	b2 14       	cp	r11, r2
 9fe:	60 f4       	brcc	.+24     	; 0xa18 <__DATA_REGION_LENGTH__+0x18>
 a00:	b6 01       	movw	r22, r12
 a02:	80 e2       	ldi	r24, 0x20	; 32
 a04:	90 e0       	ldi	r25, 0x00	; 0
 a06:	0e 94 6b 05 	call	0xad6	; 0xad6 <fputc>
 a0a:	b3 94       	inc	r11
 a0c:	f7 cf       	rjmp	.-18     	; 0x9fc <vfprintf+0x314>
 a0e:	b2 14       	cp	r11, r2
 a10:	18 f4       	brcc	.+6      	; 0xa18 <__DATA_REGION_LENGTH__+0x18>
 a12:	2b 18       	sub	r2, r11
 a14:	02 c0       	rjmp	.+4      	; 0xa1a <__DATA_REGION_LENGTH__+0x1a>
 a16:	98 2c       	mov	r9, r8
 a18:	21 2c       	mov	r2, r1
 a1a:	a4 fe       	sbrs	r10, 4
 a1c:	10 c0       	rjmp	.+32     	; 0xa3e <__DATA_REGION_LENGTH__+0x3e>
 a1e:	b6 01       	movw	r22, r12
 a20:	80 e3       	ldi	r24, 0x30	; 48
 a22:	90 e0       	ldi	r25, 0x00	; 0
 a24:	0e 94 6b 05 	call	0xad6	; 0xad6 <fputc>
 a28:	a2 fe       	sbrs	r10, 2
 a2a:	17 c0       	rjmp	.+46     	; 0xa5a <__DATA_REGION_LENGTH__+0x5a>
 a2c:	a1 fc       	sbrc	r10, 1
 a2e:	03 c0       	rjmp	.+6      	; 0xa36 <__DATA_REGION_LENGTH__+0x36>
 a30:	88 e7       	ldi	r24, 0x78	; 120
 a32:	90 e0       	ldi	r25, 0x00	; 0
 a34:	02 c0       	rjmp	.+4      	; 0xa3a <__DATA_REGION_LENGTH__+0x3a>
 a36:	88 e5       	ldi	r24, 0x58	; 88
 a38:	90 e0       	ldi	r25, 0x00	; 0
 a3a:	b6 01       	movw	r22, r12
 a3c:	0c c0       	rjmp	.+24     	; 0xa56 <__DATA_REGION_LENGTH__+0x56>
 a3e:	8a 2d       	mov	r24, r10
 a40:	86 78       	andi	r24, 0x86	; 134
 a42:	59 f0       	breq	.+22     	; 0xa5a <__DATA_REGION_LENGTH__+0x5a>
 a44:	a1 fe       	sbrs	r10, 1
 a46:	02 c0       	rjmp	.+4      	; 0xa4c <__DATA_REGION_LENGTH__+0x4c>
 a48:	8b e2       	ldi	r24, 0x2B	; 43
 a4a:	01 c0       	rjmp	.+2      	; 0xa4e <__DATA_REGION_LENGTH__+0x4e>
 a4c:	80 e2       	ldi	r24, 0x20	; 32
 a4e:	a7 fc       	sbrc	r10, 7
 a50:	8d e2       	ldi	r24, 0x2D	; 45
 a52:	b6 01       	movw	r22, r12
 a54:	90 e0       	ldi	r25, 0x00	; 0
 a56:	0e 94 6b 05 	call	0xad6	; 0xad6 <fputc>
 a5a:	89 14       	cp	r8, r9
 a5c:	38 f4       	brcc	.+14     	; 0xa6c <__DATA_REGION_LENGTH__+0x6c>
 a5e:	b6 01       	movw	r22, r12
 a60:	80 e3       	ldi	r24, 0x30	; 48
 a62:	90 e0       	ldi	r25, 0x00	; 0
 a64:	0e 94 6b 05 	call	0xad6	; 0xad6 <fputc>
 a68:	9a 94       	dec	r9
 a6a:	f7 cf       	rjmp	.-18     	; 0xa5a <__DATA_REGION_LENGTH__+0x5a>
 a6c:	8a 94       	dec	r8
 a6e:	f3 01       	movw	r30, r6
 a70:	e8 0d       	add	r30, r8
 a72:	f1 1d       	adc	r31, r1
 a74:	80 81       	ld	r24, Z
 a76:	b6 01       	movw	r22, r12
 a78:	90 e0       	ldi	r25, 0x00	; 0
 a7a:	0e 94 6b 05 	call	0xad6	; 0xad6 <fputc>
 a7e:	81 10       	cpse	r8, r1
 a80:	f5 cf       	rjmp	.-22     	; 0xa6c <__DATA_REGION_LENGTH__+0x6c>
 a82:	22 20       	and	r2, r2
 a84:	09 f4       	brne	.+2      	; 0xa88 <__DATA_REGION_LENGTH__+0x88>
 a86:	42 ce       	rjmp	.-892    	; 0x70c <vfprintf+0x24>
 a88:	b6 01       	movw	r22, r12
 a8a:	80 e2       	ldi	r24, 0x20	; 32
 a8c:	90 e0       	ldi	r25, 0x00	; 0
 a8e:	0e 94 6b 05 	call	0xad6	; 0xad6 <fputc>
 a92:	2a 94       	dec	r2
 a94:	f6 cf       	rjmp	.-20     	; 0xa82 <__DATA_REGION_LENGTH__+0x82>
 a96:	f6 01       	movw	r30, r12
 a98:	86 81       	ldd	r24, Z+6	; 0x06
 a9a:	97 81       	ldd	r25, Z+7	; 0x07
 a9c:	02 c0       	rjmp	.+4      	; 0xaa2 <__DATA_REGION_LENGTH__+0xa2>
 a9e:	8f ef       	ldi	r24, 0xFF	; 255
 aa0:	9f ef       	ldi	r25, 0xFF	; 255
 aa2:	2b 96       	adiw	r28, 0x0b	; 11
 aa4:	e2 e1       	ldi	r30, 0x12	; 18
 aa6:	0c 94 21 06 	jmp	0xc42	; 0xc42 <__epilogue_restores__>

00000aaa <strnlen_P>:
 aaa:	fc 01       	movw	r30, r24
 aac:	05 90       	lpm	r0, Z+
 aae:	61 50       	subi	r22, 0x01	; 1
 ab0:	70 40       	sbci	r23, 0x00	; 0
 ab2:	01 10       	cpse	r0, r1
 ab4:	d8 f7       	brcc	.-10     	; 0xaac <strnlen_P+0x2>
 ab6:	80 95       	com	r24
 ab8:	90 95       	com	r25
 aba:	8e 0f       	add	r24, r30
 abc:	9f 1f       	adc	r25, r31
 abe:	08 95       	ret

00000ac0 <strnlen>:
 ac0:	fc 01       	movw	r30, r24
 ac2:	61 50       	subi	r22, 0x01	; 1
 ac4:	70 40       	sbci	r23, 0x00	; 0
 ac6:	01 90       	ld	r0, Z+
 ac8:	01 10       	cpse	r0, r1
 aca:	d8 f7       	brcc	.-10     	; 0xac2 <strnlen+0x2>
 acc:	80 95       	com	r24
 ace:	90 95       	com	r25
 ad0:	8e 0f       	add	r24, r30
 ad2:	9f 1f       	adc	r25, r31
 ad4:	08 95       	ret

00000ad6 <fputc>:
 ad6:	0f 93       	push	r16
 ad8:	1f 93       	push	r17
 ada:	cf 93       	push	r28
 adc:	df 93       	push	r29
 ade:	fb 01       	movw	r30, r22
 ae0:	23 81       	ldd	r18, Z+3	; 0x03
 ae2:	21 fd       	sbrc	r18, 1
 ae4:	03 c0       	rjmp	.+6      	; 0xaec <fputc+0x16>
 ae6:	8f ef       	ldi	r24, 0xFF	; 255
 ae8:	9f ef       	ldi	r25, 0xFF	; 255
 aea:	2c c0       	rjmp	.+88     	; 0xb44 <__stack+0x45>
 aec:	22 ff       	sbrs	r18, 2
 aee:	16 c0       	rjmp	.+44     	; 0xb1c <__stack+0x1d>
 af0:	46 81       	ldd	r20, Z+6	; 0x06
 af2:	57 81       	ldd	r21, Z+7	; 0x07
 af4:	24 81       	ldd	r18, Z+4	; 0x04
 af6:	35 81       	ldd	r19, Z+5	; 0x05
 af8:	42 17       	cp	r20, r18
 afa:	53 07       	cpc	r21, r19
 afc:	44 f4       	brge	.+16     	; 0xb0e <__stack+0xf>
 afe:	a0 81       	ld	r26, Z
 b00:	b1 81       	ldd	r27, Z+1	; 0x01
 b02:	9d 01       	movw	r18, r26
 b04:	2f 5f       	subi	r18, 0xFF	; 255
 b06:	3f 4f       	sbci	r19, 0xFF	; 255
 b08:	31 83       	std	Z+1, r19	; 0x01
 b0a:	20 83       	st	Z, r18
 b0c:	8c 93       	st	X, r24
 b0e:	26 81       	ldd	r18, Z+6	; 0x06
 b10:	37 81       	ldd	r19, Z+7	; 0x07
 b12:	2f 5f       	subi	r18, 0xFF	; 255
 b14:	3f 4f       	sbci	r19, 0xFF	; 255
 b16:	37 83       	std	Z+7, r19	; 0x07
 b18:	26 83       	std	Z+6, r18	; 0x06
 b1a:	14 c0       	rjmp	.+40     	; 0xb44 <__stack+0x45>
 b1c:	8b 01       	movw	r16, r22
 b1e:	ec 01       	movw	r28, r24
 b20:	fb 01       	movw	r30, r22
 b22:	00 84       	ldd	r0, Z+8	; 0x08
 b24:	f1 85       	ldd	r31, Z+9	; 0x09
 b26:	e0 2d       	mov	r30, r0
 b28:	09 95       	icall
 b2a:	89 2b       	or	r24, r25
 b2c:	e1 f6       	brne	.-72     	; 0xae6 <fputc+0x10>
 b2e:	d8 01       	movw	r26, r16
 b30:	16 96       	adiw	r26, 0x06	; 6
 b32:	8d 91       	ld	r24, X+
 b34:	9c 91       	ld	r25, X
 b36:	17 97       	sbiw	r26, 0x07	; 7
 b38:	01 96       	adiw	r24, 0x01	; 1
 b3a:	17 96       	adiw	r26, 0x07	; 7
 b3c:	9c 93       	st	X, r25
 b3e:	8e 93       	st	-X, r24
 b40:	16 97       	sbiw	r26, 0x06	; 6
 b42:	ce 01       	movw	r24, r28
 b44:	df 91       	pop	r29
 b46:	cf 91       	pop	r28
 b48:	1f 91       	pop	r17
 b4a:	0f 91       	pop	r16
 b4c:	08 95       	ret

00000b4e <__ultoa_invert>:
 b4e:	fa 01       	movw	r30, r20
 b50:	aa 27       	eor	r26, r26
 b52:	28 30       	cpi	r18, 0x08	; 8
 b54:	51 f1       	breq	.+84     	; 0xbaa <__ultoa_invert+0x5c>
 b56:	20 31       	cpi	r18, 0x10	; 16
 b58:	81 f1       	breq	.+96     	; 0xbba <__ultoa_invert+0x6c>
 b5a:	e8 94       	clt
 b5c:	6f 93       	push	r22
 b5e:	6e 7f       	andi	r22, 0xFE	; 254
 b60:	6e 5f       	subi	r22, 0xFE	; 254
 b62:	7f 4f       	sbci	r23, 0xFF	; 255
 b64:	8f 4f       	sbci	r24, 0xFF	; 255
 b66:	9f 4f       	sbci	r25, 0xFF	; 255
 b68:	af 4f       	sbci	r26, 0xFF	; 255
 b6a:	b1 e0       	ldi	r27, 0x01	; 1
 b6c:	3e d0       	rcall	.+124    	; 0xbea <__ultoa_invert+0x9c>
 b6e:	b4 e0       	ldi	r27, 0x04	; 4
 b70:	3c d0       	rcall	.+120    	; 0xbea <__ultoa_invert+0x9c>
 b72:	67 0f       	add	r22, r23
 b74:	78 1f       	adc	r23, r24
 b76:	89 1f       	adc	r24, r25
 b78:	9a 1f       	adc	r25, r26
 b7a:	a1 1d       	adc	r26, r1
 b7c:	68 0f       	add	r22, r24
 b7e:	79 1f       	adc	r23, r25
 b80:	8a 1f       	adc	r24, r26
 b82:	91 1d       	adc	r25, r1
 b84:	a1 1d       	adc	r26, r1
 b86:	6a 0f       	add	r22, r26
 b88:	71 1d       	adc	r23, r1
 b8a:	81 1d       	adc	r24, r1
 b8c:	91 1d       	adc	r25, r1
 b8e:	a1 1d       	adc	r26, r1
 b90:	20 d0       	rcall	.+64     	; 0xbd2 <__ultoa_invert+0x84>
 b92:	09 f4       	brne	.+2      	; 0xb96 <__ultoa_invert+0x48>
 b94:	68 94       	set
 b96:	3f 91       	pop	r19
 b98:	2a e0       	ldi	r18, 0x0A	; 10
 b9a:	26 9f       	mul	r18, r22
 b9c:	11 24       	eor	r1, r1
 b9e:	30 19       	sub	r19, r0
 ba0:	30 5d       	subi	r19, 0xD0	; 208
 ba2:	31 93       	st	Z+, r19
 ba4:	de f6       	brtc	.-74     	; 0xb5c <__ultoa_invert+0xe>
 ba6:	cf 01       	movw	r24, r30
 ba8:	08 95       	ret
 baa:	46 2f       	mov	r20, r22
 bac:	47 70       	andi	r20, 0x07	; 7
 bae:	40 5d       	subi	r20, 0xD0	; 208
 bb0:	41 93       	st	Z+, r20
 bb2:	b3 e0       	ldi	r27, 0x03	; 3
 bb4:	0f d0       	rcall	.+30     	; 0xbd4 <__ultoa_invert+0x86>
 bb6:	c9 f7       	brne	.-14     	; 0xbaa <__ultoa_invert+0x5c>
 bb8:	f6 cf       	rjmp	.-20     	; 0xba6 <__ultoa_invert+0x58>
 bba:	46 2f       	mov	r20, r22
 bbc:	4f 70       	andi	r20, 0x0F	; 15
 bbe:	40 5d       	subi	r20, 0xD0	; 208
 bc0:	4a 33       	cpi	r20, 0x3A	; 58
 bc2:	18 f0       	brcs	.+6      	; 0xbca <__ultoa_invert+0x7c>
 bc4:	49 5d       	subi	r20, 0xD9	; 217
 bc6:	31 fd       	sbrc	r19, 1
 bc8:	40 52       	subi	r20, 0x20	; 32
 bca:	41 93       	st	Z+, r20
 bcc:	02 d0       	rcall	.+4      	; 0xbd2 <__ultoa_invert+0x84>
 bce:	a9 f7       	brne	.-22     	; 0xbba <__ultoa_invert+0x6c>
 bd0:	ea cf       	rjmp	.-44     	; 0xba6 <__ultoa_invert+0x58>
 bd2:	b4 e0       	ldi	r27, 0x04	; 4
 bd4:	a6 95       	lsr	r26
 bd6:	97 95       	ror	r25
 bd8:	87 95       	ror	r24
 bda:	77 95       	ror	r23
 bdc:	67 95       	ror	r22
 bde:	ba 95       	dec	r27
 be0:	c9 f7       	brne	.-14     	; 0xbd4 <__ultoa_invert+0x86>
 be2:	00 97       	sbiw	r24, 0x00	; 0
 be4:	61 05       	cpc	r22, r1
 be6:	71 05       	cpc	r23, r1
 be8:	08 95       	ret
 bea:	9b 01       	movw	r18, r22
 bec:	ac 01       	movw	r20, r24
 bee:	0a 2e       	mov	r0, r26
 bf0:	06 94       	lsr	r0
 bf2:	57 95       	ror	r21
 bf4:	47 95       	ror	r20
 bf6:	37 95       	ror	r19
 bf8:	27 95       	ror	r18
 bfa:	ba 95       	dec	r27
 bfc:	c9 f7       	brne	.-14     	; 0xbf0 <__ultoa_invert+0xa2>
 bfe:	62 0f       	add	r22, r18
 c00:	73 1f       	adc	r23, r19
 c02:	84 1f       	adc	r24, r20
 c04:	95 1f       	adc	r25, r21
 c06:	a0 1d       	adc	r26, r0
 c08:	08 95       	ret

00000c0a <__prologue_saves__>:
 c0a:	2f 92       	push	r2
 c0c:	3f 92       	push	r3
 c0e:	4f 92       	push	r4
 c10:	5f 92       	push	r5
 c12:	6f 92       	push	r6
 c14:	7f 92       	push	r7
 c16:	8f 92       	push	r8
 c18:	9f 92       	push	r9
 c1a:	af 92       	push	r10
 c1c:	bf 92       	push	r11
 c1e:	cf 92       	push	r12
 c20:	df 92       	push	r13
 c22:	ef 92       	push	r14
 c24:	ff 92       	push	r15
 c26:	0f 93       	push	r16
 c28:	1f 93       	push	r17
 c2a:	cf 93       	push	r28
 c2c:	df 93       	push	r29
 c2e:	cd b7       	in	r28, 0x3d	; 61
 c30:	de b7       	in	r29, 0x3e	; 62
 c32:	ca 1b       	sub	r28, r26
 c34:	db 0b       	sbc	r29, r27
 c36:	0f b6       	in	r0, 0x3f	; 63
 c38:	f8 94       	cli
 c3a:	de bf       	out	0x3e, r29	; 62
 c3c:	0f be       	out	0x3f, r0	; 63
 c3e:	cd bf       	out	0x3d, r28	; 61
 c40:	09 94       	ijmp

00000c42 <__epilogue_restores__>:
 c42:	2a 88       	ldd	r2, Y+18	; 0x12
 c44:	39 88       	ldd	r3, Y+17	; 0x11
 c46:	48 88       	ldd	r4, Y+16	; 0x10
 c48:	5f 84       	ldd	r5, Y+15	; 0x0f
 c4a:	6e 84       	ldd	r6, Y+14	; 0x0e
 c4c:	7d 84       	ldd	r7, Y+13	; 0x0d
 c4e:	8c 84       	ldd	r8, Y+12	; 0x0c
 c50:	9b 84       	ldd	r9, Y+11	; 0x0b
 c52:	aa 84       	ldd	r10, Y+10	; 0x0a
 c54:	b9 84       	ldd	r11, Y+9	; 0x09
 c56:	c8 84       	ldd	r12, Y+8	; 0x08
 c58:	df 80       	ldd	r13, Y+7	; 0x07
 c5a:	ee 80       	ldd	r14, Y+6	; 0x06
 c5c:	fd 80       	ldd	r15, Y+5	; 0x05
 c5e:	0c 81       	ldd	r16, Y+4	; 0x04
 c60:	1b 81       	ldd	r17, Y+3	; 0x03
 c62:	aa 81       	ldd	r26, Y+2	; 0x02
 c64:	b9 81       	ldd	r27, Y+1	; 0x01
 c66:	ce 0f       	add	r28, r30
 c68:	d1 1d       	adc	r29, r1
 c6a:	0f b6       	in	r0, 0x3f	; 63
 c6c:	f8 94       	cli
 c6e:	de bf       	out	0x3e, r29	; 62
 c70:	0f be       	out	0x3f, r0	; 63
 c72:	cd bf       	out	0x3d, r28	; 61
 c74:	ed 01       	movw	r28, r26
 c76:	08 95       	ret

00000c78 <_exit>:
 c78:	f8 94       	cli

00000c7a <__stop_program>:
 c7a:	ff cf       	rjmp	.-2      	; 0xc7a <__stop_program>
